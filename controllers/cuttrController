const dotenv = require('dotenv');
const fs = require('fs');
const path = require('path');

dotenv.config();
const APP_URL = process.env.APP_URL;

const linkFile = path.join(__dirname, '../files', 'url.json');


const getCuttr = (req, res) => {
    res.send('Hello from cuttrController')
}

const getCuttrById = (req, res) => {
    const { id } = req.params;

    fs.readFile(linkFile, 'utf8', (err, data) => {
        if(err){
            res.writeHead(500)
            .json({ "message": "Unable to fetch link" });
            res.end();
        }
        const links = JSON.parse(data);

        // get the index of the product 
        const linkIndex = links.findIndex((link) => {
            return link.shortUrl === APP_URL + '/' + id;
        });

        if(linkIndex === -1){
            res.writeHead(404).json({ "message": "link not found"});
        }else {
            res.status(200)
            .json({"message": "link retrieved Successfully", "data": links[linkIndex]});
        }
    });
}

const postCuttr = (req, res) => {
    //accept incoming request body
    const {long_url } = req.body;
    console.log(long_url);

    // validate incoming request body
    if (!long_url) {
        return res.status(400).json({ error: 'Long URL is required' });
    }

    // generate 7 character base 64 string
    const generateShortUrl = () => {
        return Buffer.from(Math.random().toString(36).substring(2, 9)).toString('base64').substring(0, 7);
    }

    const short_url = `${APP_URL}/${generateShortUrl()}`;
    //create new cuttr
    const newCuttr = {
        key: generatedShortUrl,
        longUrl: long_url,
        shortUrl: short_url,
        clicks: 0
    }

    //send response
    res.status(201).json(newCuttr);


}

const putCuttr = (req, res) => {
    res.send('Updating from Cuttr');
}

const deleteCuttr = (req, res) => {
    res.send('Deleting from Cuttr');
}

module.exports = {
    getCuttr,
    getCuttrById,
    postCuttr,
    putCuttr,
    deleteCuttr
}